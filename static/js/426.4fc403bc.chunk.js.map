{"version":3,"file":"static/js/426.4fc403bc.chunk.js","mappings":"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","sources":["page/Movies/Movies.jsx","servise/api.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport { Circles } from  'react-loader-spinner';\nimport API from 'servise/api';\n\nconst Movies = () => {\n    const [queryMovie, setQueryMovie] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query');\n\n    async function handleFetchMovie (que) {\n        setIsLoading(true);\n\n    try {\n      const {data} = await API.searchMovie(que); \n      setQueryMovie(data.results);\n      } \n      catch (error) {\n        alert(\"Sorry, there are no movies. Please try again.\"); \n      } \n      finally {\n        setIsLoading(false);\n      };\n    };\n\n    useEffect(() => {\n      query &&\n      handleFetchMovie(query); \n      }, [query]); \n\n  return (\n    <div>\n      <div>\n        <input\n        type='text'\n        onChange={(e => setSearchQuery(e.target.value))} \n        />\n        <button onClick={() => setSearchParams({query: searchQuery})}>Search</button>\n      </div>\n      <div>\n        {isLoading && <Circles/>}\n\n        <ul>\n        {queryMovie.map(({id, title}) => (\n            <li key={id}>\n            <Link to={`:${id}`}>{title}</Link>\n            </li>))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Movies;","import axios from \"axios\";\n\nasync function getTrending () {\n    const BASE_URL = 'https://api.themoviedb.org/3/trending/movie/week';\n    const params = new URLSearchParams({\n        api_key: 'f06240549d838abb3d31b9bb8bd509ce',\n    });\n    return await axios.get(`${BASE_URL}?${params}`); \n};\n\nasync function searchMovie (q) {\n    const BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n    const params = new URLSearchParams({\n        api_key: 'f06240549d838abb3d31b9bb8bd509ce',\n        query: q,\n    });\n    return await axios.get(`${BASE_URL}?${params}`); \n};\n\nasync function getMovieDetails (movie_id) {\n    const BASE_URL = `https://api.themoviedb.org/3/movie/${movie_id}`;\n    const params = new URLSearchParams({\n        api_key: 'f06240549d838abb3d31b9bb8bd509ce',\n    });\n    return await axios.get(`${BASE_URL}?${params}`); \n};\n\nasync function getMovieCredits (movie_id) {\n    const BASE_URL = `https://api.themoviedb.org/3/movie/${movie_id}/credits`;\n    const params = new URLSearchParams({\n        api_key: 'f06240549d838abb3d31b9bb8bd509ce',\n    });\n    return await axios.get(`${BASE_URL}?${params}`); \n};\n\nasync function getMovieReviews (movie_id) {\n    const BASE_URL = `https://api.themoviedb.org/3/movie/${movie_id}/reviews`;\n    const params = new URLSearchParams({\n        api_key: 'f06240549d838abb3d31b9bb8bd509ce',\n    });\n    return await axios.get(`${BASE_URL}?${params}`); \n};\n\nconst API = {\n    getTrending,\n    searchMovie,\n    getMovieDetails,\n    getMovieCredits,\n    getMovieReviews,\n};\n\nexport default API;"],"names":["useState","queryMovie","setQueryMovie","isLoading","setIsLoading","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","query","get","que","API","data","results","alert","useEffect","handleFetchMovie","type","onChange","e","target","value","onClick","map","id","title","to","getTrending","params","URLSearchParams","api_key","axios","searchMovie","q","getMovieDetails","movie_id","BASE_URL","getMovieCredits","getMovieReviews"],"sourceRoot":""}